#!/usr/bin/env python

from typing import Any, Dict

from .context import Context

__all__ = ("Handler",)


class Handler:
    """Webhook events handler."""

    def on_raw_event(self, data: Dict[str, Any]) -> None: ...
    def on_exception(self, data: Dict[str, Any], e: Exception) -> None: ...

    def before_on_event(self, ctx: Context) -> None: ...
    def on_event(self, ctx: Context) -> None: ...
    def after_on_event(self, ctx: Context) -> None: ...

    def before_on_event_message(self, ctx: Context) -> None: ...
    def on_event_message(self, ctx: Context) -> None: ...
    def after_on_event_message(self, ctx: Context) -> None: ...

    def before_on_event_status(self, ctx: Context) -> None: ...
    def on_event_status(self, ctx: Context) -> None: ...
    def after_on_event_status(self, ctx: Context) -> None: ...

    def on_event_error(self, ctx: Context) -> None: ...

    def on_event_message_audio(self, ctx: Context) -> None: ...
    def on_event_message_button(self, ctx: Context) -> None: ...
    def on_event_message_contacts(self, ctx: Context) -> None: ...
    def on_event_message_context(self, ctx: Context) -> None: ...
    def on_event_message_document(self, ctx: Context) -> None: ...
    def on_event_message_error(self, ctx: Context) -> None: ...
    def on_event_message_image(self, ctx: Context) -> None: ...
    def on_event_message_interactive(self, ctx: Context) -> None: ...
    def on_event_message_location(self, ctx: Context) -> None: ...
    def on_event_message_order(self, ctx: Context) -> None: ...
    def on_event_message_reaction(self, ctx: Context) -> None: ...
    def on_event_message_referral(self, ctx: Context) -> None: ...
    def on_event_message_sticker(self, ctx: Context) -> None: ...
    def on_event_message_system(self, ctx: Context) -> None: ...
    def on_event_message_template(self, ctx: Context) -> None: ...
    def on_event_message_text(self, ctx: Context) -> None: ...
    def on_event_message_unknown(self, ctx: Context) -> None: ...
    def on_event_message_video(self, ctx: Context) -> None: ...

    def on_event_status_deleted(self, ctx: Context) -> None: ...
    def on_event_status_delivered(self, ctx: Context) -> None: ...
    def on_event_status_error(self, ctx: Context) -> None: ...
    def on_event_status_failed(self, ctx: Context) -> None: ...
    def on_event_status_read(self, ctx: Context) -> None: ...
    def on_event_status_sent(self, ctx: Context) -> None: ...
